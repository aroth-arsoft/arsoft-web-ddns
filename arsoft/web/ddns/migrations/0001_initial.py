# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-05-12 15:42
from __future__ import unicode_literals

import arsoft.web.ddns.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DDNSModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='Enter full qualified domain name of the host', max_length=200, unique=True, verbose_name='Hostname')),
                ('password', models.CharField(default=arsoft.web.ddns.models.generate_password, max_length=200, verbose_name='Password')),
                ('rdtype', models.CharField(choices=[('A', 'A'), ('AAAA', 'AAAA'), ('MX', 'MX')], default='A', max_length=4, verbose_name='DNS record type')),
                ('state', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('D', 'Deleted')], default='A', max_length=4, verbose_name='State')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'host',
                'verbose_name_plural': 'hosts',
            },
        ),
        migrations.CreateModel(
            name='DDNSZoneViewModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Name')),
                ('source_address', models.GenericIPAddressField(default='127.0.0.1', verbose_name='Source address')),
                ('source_port', models.IntegerField(default=0, verbose_name='Source port')),
                ('dnsserver', models.GenericIPAddressField(default='127.0.0.1', verbose_name='DNS server')),
            ],
            options={
                'verbose_name': 'zone view',
                'verbose_name_plural': 'zone views',
            },
        ),
        migrations.AddField(
            model_name='ddnsmodel',
            name='zone_views',
            field=models.ManyToManyField(to='ddns.DDNSZoneViewModel', verbose_name='list of zone views'),
        ),
    ]
